run  < example6.pas
bt 
f 4 
run  < example6.pas
bt
run  < example6.pas
bt
run  < example6.pas
bt
run  < example6.pas
bt
f 9
print *this
print *this -> pscript_env -> stack_env 
print *(int16_t*)(this -> pscript_env -> stack_env -> mem_array + pscript_stack__mem__size - 2)
print *(int16_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 2)
print *(int16_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 4)
print *(int16_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 6)
print *(int16_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 8)
f 5 
print *(int16_t*)(value1)
run  < example6.pas
btbt
bt
run  < example6.pas
bt
f 4
print *(int *)(value1)
print *(int *)(value2)
run  < example6.pas
bt 
print lex_env_nb
print frame0_ref_counter_offset
run  < example6.pas
bt
run  < example6.pas
bt
f 4 
print *this
print *this -> pscript_env
print *this -> pscript_env -> stack_env
print *(int16_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 4)
print *(int*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 4)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 4)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 8)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 12)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 16)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 20)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 24)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 28)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 32)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 36)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 40)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 44)
run  < example6.pas
bt
f 4
print *this -> pscript_env -> stack_env
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 4)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 8)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 12)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 16)
print *(int32_t*)(this -> pscript_env -> stack_env -> mem__array + pscript_stack__mem__size - 20)
run  < example6.pas
bt
run  < example6.pas
bt
run  < example6.pas
bt
f 3
print total_allocated_mem_size
print retval_sizeof
print method_of_type_i__proxy__sizeof
print arg_all_sizeof
print localvar_all_sizeof
print lexical_env_stack_sizeof
print frame_size_sizeof
print reference_counter_sizeof
print *this -> funproc_env
print *this -> funproc_env -> arg_nb[funproc_i]
print this -> funproc_env -> arg_nb[funproc_i]
run  < example6.pas
bt
f 5 
print *(int16_t*) value1
run  < example6.pas
bt
echo "begin item; end;" | run 
run
bt
f 3
print rule_right_len
print *items_indices
print *(int [1])items_indices
print (int [1])items_indices
print (char [1])items_indices
print (int8_t [1])items_indices
print (unsigned char [1])items_indices
print this -> custom_syntax_rules__array[index]
print *(this -> custom_syntax_rules__array[index])
print *this -> custom_syntax_rules__array
print *this -> custom_syntax_rules__array[index]
print *(char [15])this -> custom_syntax_rules__array[index]
print *(char [15])(this -> custom_syntax_rules__array[index])
print (char [15])(this -> custom_syntax_rules__array[index])
print (this -> custom_syntax_rules__array[index][0])
print (char)(this -> custom_syntax_rules__array[index][0])
print ((char[])(this -> custom_syntax_rules__array[index])[0]
print ((char[])(this -> custom_syntax_rules__array[index]))[0]
print *this
print *this -> custom_syntax_rules__array
print *this -> custom_syntax_rules__array[index * 15 + 0]
print this -> custom_syntax_rules__array[index * 15 + 0]
print this -> custom_syntax_rules__array[0]
print *(this -> custom_syntax_rules__array)
print *(this -> custom_syntax_rules__array + (index * 15 + 0))
print ((char*)this -> custom_syntax_rules__array)[index * 15 + 0]
print ((char*)(this -> custom_syntax_rules__array))[index * 15 + 0]
print ((char*)(this -> custom_syntax_rules__array))[index * 15 + 1]
print ((unsigned char*)(this -> custom_syntax_rules__array))[index * 15 + 0]
print ((unsigned char*)(this -> custom_syntax_rules__array))[index * 15 + 1]
run < example7.pas 
bt
f 3 
print expected_thg
run < example7.pas 
run < example7.pas 
run < example7.pas 
bt
bt
run < example7.pas 
bt
run < example7.pas 
bt ~
run < example7.pas 
bt
run < example7.pas 
bt 
run < example7.pas 
bt
f 2 
print token_type
run  --copyright-cstr
bt
run
run
